# Generated by Django 5.2.7 on 2025-10-16 04:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CareerSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=200)),
                ('responses', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=200)),
                ('name_my', models.CharField(blank=True, max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_my', models.TextField(blank=True)),
                ('university_category_keywords', models.TextField(blank=True, help_text='Comma-separated keywords to match with university majors')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='PrivateCollege',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(default='N/A', max_length=200)),
                ('name_my', models.CharField(blank=True, max_length=200)),
                ('abbreviation_en', models.CharField(default='N/A', max_length=100)),
                ('abbreviation_my', models.CharField(blank=True, max_length=100)),
                ('location_en', models.CharField(default='N/A', max_length=100)),
                ('location_my', models.CharField(blank=True, max_length=100)),
                ('established', models.IntegerField()),
                ('description_en', models.TextField(default='N/A')),
                ('description_my', models.TextField(blank=True)),
                ('about_en', models.TextField(default='N/A')),
                ('about_my', models.TextField(blank=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('data_updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('total_students', models.CharField(blank=True, help_text="Total number of students (e.g., '5,000+', '8,000')", max_length=100, null=True)),
                ('faculty_members', models.CharField(blank=True, help_text="Number of faculty members (e.g., '200+', '350')", max_length=100, null=True)),
                ('total_programs', models.CharField(blank=True, help_text="Number of programs offered (e.g., '30+', '45')", max_length=100, null=True)),
                ('highlights_en', models.JSONField(default=list, help_text="Key highlights in English as JSON list of objects with 'title' and 'description'")),
                ('highlights_my', models.JSONField(default=list, help_text="Key highlights in Myanmar as JSON list of objects with 'title' and 'description'")),
                ('faculties_departments_en', models.TextField(default=list, help_text='List of faculties/departments in English')),
                ('faculties_departments_my', models.TextField(default=list, help_text='List of faculties/departments in Myanmar')),
                ('undergraduate_majors_en', models.JSONField(default=list, help_text='Undergraduate majors in English')),
                ('undergraduate_majors_my', models.JSONField(default=list, help_text='Undergraduate majors in Myanmar')),
                ('graduate_majors_en', models.JSONField(default=list, help_text='Graduate majors in English')),
                ('graduate_majors_my', models.JSONField(default=list, help_text='Graduate majors in Myanmar')),
                ('doctoral_majors_en', models.JSONField(default=list, help_text='Doctoral majors in English')),
                ('doctoral_majors_my', models.JSONField(default=list, help_text='Doctoral majors in Myanmar')),
                ('popular_programs_en', models.TextField(default=list, help_text='Popular programs or majors in English')),
                ('popular_programs_my', models.TextField(default=list, help_text='Popular programs or majors in Myanmar')),
                ('degree_types_offered', models.JSONField(default=list, help_text='List of degree types offered (Bachelor, Master, PhD, etc.)')),
                ('campus_facilities_en', models.TextField(default=list, help_text='Campus facilities in English (libraries, labs, sports, dorms)')),
                ('campus_facilities_my', models.TextField(default=list, help_text='Campus facilities in Myanmar')),
                ('student_organizations_en', models.TextField(default=list, help_text='Student organizations/clubs/societies in English')),
                ('student_organizations_my', models.TextField(default=list, help_text='Student organizations/clubs/societies in Myanmar')),
                ('international_collaborations_en', models.TextField(default=list, help_text='International collaborations or exchange programs in English')),
                ('international_collaborations_my', models.TextField(default=list, help_text='International collaborations or exchange programs in Myanmar')),
                ('national_ranking', models.CharField(blank=True, max_length=100, null=True)),
                ('international_ranking', models.CharField(blank=True, max_length=100, null=True)),
                ('campus_map_url', models.URLField(blank=True, help_text='URL to campus map', null=True)),
                ('related_colleges', models.ManyToManyField(blank=True, help_text='Related colleges that students might also be interested in', to='NovaX_webpage.privatecollege')),
            ],
        ),
        migrations.CreateModel(
            name='PublicUniversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(default='N/A', max_length=200)),
                ('name_my', models.CharField(blank=True, max_length=200)),
                ('abbreviation_en', models.CharField(default='N/A', max_length=100)),
                ('abbreviation_my', models.CharField(blank=True, max_length=100)),
                ('location_en', models.CharField(default='N/A', max_length=100)),
                ('location_my', models.CharField(blank=True, max_length=100)),
                ('established', models.IntegerField()),
                ('description_en', models.TextField(default='N/A')),
                ('description_my', models.TextField(blank=True)),
                ('about_en', models.TextField(default='N/A')),
                ('about_my', models.TextField(blank=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('data_updated_at', models.DateTimeField(blank=True, null=True)),
                ('total_students', models.CharField(blank=True, help_text="Total number of students (e.g., '15,000+', '20,000')", max_length=100, null=True)),
                ('faculty_members', models.CharField(blank=True, help_text="Number of faculty members (e.g., '800+', '1,200')", max_length=100, null=True)),
                ('total_programs', models.CharField(blank=True, help_text="Number of programs offered (e.g., '50+', '75')", max_length=100, null=True)),
                ('highlights_en', models.JSONField(default=list, help_text="Key highlights in English as JSON list of objects with 'title' and 'description'")),
                ('highlights_my', models.JSONField(default=list, help_text="Key highlights in Myanmar as JSON list of objects with 'title' and 'description'")),
                ('faculties_departments_en', models.TextField(default=list, help_text='List of faculties/departments in English')),
                ('faculties_departments_my', models.TextField(default=list, help_text='List of faculties/departments in Myanmar')),
                ('undergraduate_majors_en', models.JSONField(default=list, help_text='Undergraduate majors in English')),
                ('undergraduate_majors_my', models.JSONField(default=list, help_text='Undergraduate majors in Myanmar')),
                ('graduate_majors_en', models.JSONField(default=list, help_text='Graduate majors in English')),
                ('graduate_majors_my', models.JSONField(default=list, help_text='Graduate majors in Myanmar')),
                ('doctoral_majors_en', models.JSONField(default=list, help_text='Doctoral majors in English')),
                ('doctoral_majors_my', models.JSONField(default=list, help_text='Doctoral majors in Myanmar')),
                ('popular_programs_en', models.TextField(default=list, help_text='Popular programs or majors in English')),
                ('popular_programs_my', models.TextField(default=list, help_text='Popular programs or majors in Myanmar')),
                ('degree_types_offered', models.JSONField(default=list, help_text='List of degree types offered (Bachelor, Master, PhD, etc.)')),
                ('campus_facilities_en', models.TextField(default=list, help_text='Campus facilities in English (libraries, labs, sports, dorms)')),
                ('campus_facilities_my', models.TextField(default=list, help_text='Campus facilities in Myanmar')),
                ('student_organizations_en', models.TextField(default=list, help_text='Student organizations/clubs/societies in English')),
                ('student_organizations_my', models.TextField(default=list, help_text='Student organizations/clubs/societies in Myanmar')),
                ('international_collaborations_en', models.TextField(default=list, help_text='International collaborations or exchange programs in English')),
                ('international_collaborations_my', models.TextField(default=list, help_text='International collaborations or exchange programs in Myanmar')),
                ('national_ranking', models.CharField(blank=True, max_length=100, null=True)),
                ('international_ranking', models.CharField(blank=True, max_length=100, null=True)),
                ('campus_map_url', models.URLField(blank=True, help_text='URL to campus map', null=True)),
                ('related_universities', models.ManyToManyField(blank=True, help_text='Related universities that students might also be interested in', to='NovaX_webpage.publicuniversity')),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=200)),
                ('name_my', models.CharField(blank=True, max_length=200)),
                ('description_en', models.TextField()),
                ('description_my', models.TextField(blank=True)),
                ('category_en', models.CharField(max_length=200)),
                ('category_my', models.CharField(blank=True, max_length=200)),
                ('duration', models.CharField(max_length=50)),
                ('degree_type', models.CharField(choices=[('bachelor', 'Bachelor Degree'), ('master', 'Master Degree'), ('phd', 'PhD'), ('diploma', 'Diploma'), ('certificate', 'Certificate')], max_length=100)),
                ('career_opportunities_en', models.TextField(blank=True)),
                ('career_opportunities_my', models.TextField(blank=True)),
                ('admission_requirements_en', models.TextField(blank=True)),
                ('admission_requirements_my', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('private_college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='majors', to='NovaX_webpage.privatecollege')),
                ('public_university', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='majors', to='NovaX_webpage.publicuniversity')),
            ],
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(max_length=200)),
                ('title_my', models.CharField(blank=True, max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('career_keywords', models.TextField(blank=True, help_text='Comma-separated specific keywords')),
                ('description_en', models.TextField()),
                ('responsibilities_en', models.TextField()),
                ('skills_required_en', models.TextField()),
                ('education_requirements_en', models.TextField()),
                ('description_my', models.TextField(blank=True)),
                ('responsibilities_my', models.TextField(blank=True)),
                ('skills_required_my', models.TextField(blank=True)),
                ('education_requirements_my', models.TextField(blank=True)),
                ('salary_range_min', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salary_range_max', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salary_currency', models.CharField(default='USD', max_length=3)),
                ('job_outlook_en', models.CharField(choices=[('very_high', 'Very High Demand'), ('high', 'High Demand'), ('average', 'Average Demand'), ('low', 'Low Demand')], max_length=100)),
                ('job_outlook_my', models.CharField(blank=True, max_length=100)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('mid', 'Mid Level'), ('senior', 'Senior Level'), ('executive', 'Executive Level')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='careers', to='NovaX_webpage.category')),
                ('private_college', models.ForeignKey(blank=True, help_text='Related private college for this career', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NovaX_webpage.privatecollege')),
                ('public_university', models.ForeignKey(blank=True, help_text='Related public university for this career', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NovaX_webpage.publicuniversity')),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('last_school', models.CharField(blank=True, max_length=100, null=True)),
                ('passed_exam_time', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
